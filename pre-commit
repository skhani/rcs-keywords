#!/bin/sh

# author name
author=$(git config --global --get user.name);
email=$(git config --global --get user.email);

#files added
#addedfiles=$(git diff --cached --name-only);
addedfiles=$(git status --porcelain | awk 'match($1, "A"){print $2}');

#files modified
#modifiedfiles=$(git diff --name-only);
modifiedfiles=$(git status --porcelain | awk 'match($1, "M"){print $2}');

#all the files together with their relative paths
files="$addedfiles $modifiedfiles";
#regex author keyword we looking for %Author%
reg_author='%Author[^%]*%';

#regex Date keyword we looking for %Date%
reg_date='%Date[^%]*%';

#for every file in the files variable find the %Author% and %Date% keywords and replace them
#with the author who modified them and the date it was modified.
for file in $files; do
    #modified date of the file
    moddate=$(date -r $file +"%x %X");
    #mod secs
    modsecs=$(date --utc --reference=$file +%s)
    #now
    nowsecs=$(date +%s)
    #the delta
    delta=$(($nowsecs-$modsecs))
    #update the files if only more than 3 sec old. will help git ignore the
    #continuous file updates when checking in
    if [ "$delta" -gt "3" ]; then
        sed  -i -e "s#$reg_author#%Author: $author $email %#;s#$reg_date#%Date: $moddate %#" $file                                                 
    fi
done


